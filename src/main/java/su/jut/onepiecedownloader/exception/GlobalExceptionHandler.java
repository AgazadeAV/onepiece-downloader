package su.jut.onepiecedownloader.exception;

import jakarta.validation.ConstraintViolationException;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.MissingServletRequestParameterException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@Slf4j
@RestControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(EpisodeNotAvailableException.class)
    public ResponseEntity<ExceptionResponse> handleNotAvailable(EpisodeNotAvailableException ex) {
        log.warn("üö´ –≠–ø–∏–∑–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {}", ex.getMessage());
        return ExceptionResponseUtil.buildErrorResponse(HttpStatus.BAD_REQUEST, ex.getMessage());
    }

    @ExceptionHandler(YtDlpException.class)
    public ResponseEntity<ExceptionResponse> handleYtDlp(YtDlpException ex) {
        log.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ yt-dlp: {}", ex.getMessage());
        return ExceptionResponseUtil.buildErrorResponse(HttpStatus.BAD_REQUEST, ex.getMessage());
    }

    @ExceptionHandler(ConstraintViolationException.class)
    public ResponseEntity<ExceptionResponse> handleConstraintViolation(ConstraintViolationException ex) {
        String msg = ExceptionMessageUtil.getConstraintViolationMessage(ex);
        log.warn("üö´ –ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞: {}", msg);
        return ExceptionResponseUtil.buildErrorResponse(HttpStatus.BAD_REQUEST, msg);
    }

    @ExceptionHandler(MethodArgumentNotValidException.class)
    public ResponseEntity<ExceptionResponse> handleValidation(MethodArgumentNotValidException ex) {
        String msg = ExceptionMessageUtil.getMethodArgumentNotValidMessage(ex);
        log.warn("üì• –û—à–∏–±–∫–∞ –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞: {}", msg);
        return ExceptionResponseUtil.buildErrorResponse(HttpStatus.BAD_REQUEST, msg);
    }

    @ExceptionHandler(MissingServletRequestParameterException.class)
    public ResponseEntity<ExceptionResponse> handleMissingParam(MissingServletRequestParameterException ex) {
        String msg = ExceptionMessageUtil.getMissingRequestParamMessage(ex);
        log.warn("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—Ä–æ—Å–∞: {}", msg);
        return ExceptionResponseUtil.buildErrorResponse(HttpStatus.BAD_REQUEST, msg);
    }

    @ExceptionHandler(RuntimeException.class)
    public ResponseEntity<ExceptionResponse> handleGeneric(RuntimeException ex) {
        log.error("‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {}", ex.getMessage(), ex);
        return ExceptionResponseUtil.buildErrorResponse(HttpStatus.INTERNAL_SERVER_ERROR, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞");
    }
}
